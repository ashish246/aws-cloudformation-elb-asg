# This is a basic workflow to help you get started with Actions

name: Deploy Cloudformation Stack for Creating EC2 with ELB and ASG

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      awsRegion:
        description: "AWS Region"
        required: true
        default: "ap-southeast-2"
      envName:
        description: "Environment cloudformation is deployed into"
        required: true
        default: "test"
      instanceType:
        description: "Instance type of EC2 instance"
        required: true
        default: "t2.small"
      keyName:
        description: "The key name required to ssh EC2 instance"
        required: true
        default: "my-catch-key"
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Configure AWS credentials
      - name: Configure AWS IAM User Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.awsRegion }} 

      # Deploy the cloudformation template
      - name: Deploy Bastion Host CloudFormation Stacks
        id: vpc
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name:  test-elb-asg
          template: aws-elb-asg.yaml
          parameter-overrides: >-
            EnvironmentName=${{ github.event.inputs.envName }},
            InstanceType=${{ github.event.inputs.instanceType }},
            KeyName=${{ github.event.inputs.keyName }}
